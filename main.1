#include <iostream>
#include <cstdlib>
#include <ctime>

using namespace std;

const int BOARD_SIZE = 10;
const char EMPTY = '-';
const char SHIP = 'S';
const char HIT = 'X';
const char MISS = 'O';

void createBoard(char board[][BOARD_SIZE]) {
    for (int i = 0; i < BOARD_SIZE; ++i) {
        for (int j = 0; j < BOARD_SIZE; ++j) {
            board[i][j] = EMPTY;
        }
    }
}

void displayBoard(const char board[][BOARD_SIZE]) {
    cout << "   ";
    for (int i = 0; i < BOARD_SIZE; ++i) {
        cout << i << " ";
    }
    cout << endl;

    for (int i = 0; i < BOARD_SIZE; ++i) {
        cout << i << "  ";
        for (int j = 0; j < BOARD_SIZE; ++j) {
            cout << board[i][j] << " ";
        }
        cout << endl;
    }
}

void placeShipsManually(char board[][BOARD_SIZE]) {
    int shipSizes[] = { 2, 3, 3, 4, 5 };

    for (int size : shipSizes) {
        cout << "Placing a ship with size " << size << endl;
        for (int i = 0; i < size; ++i) {
            int x, y;
            cout << "Enter coordinates (x y) for part " << i + 1 << " of the ship: ";
            cin >> x >> y;
            board[x][y] = SHIP;
        }
        cout << endl;
    }
}

void placeShipsRandomly(char board[][BOARD_SIZE]) {
    srand(time(0));

    int shipSizes[] = { 2, 3, 3, 4, 5 };

    for (int size : shipSizes) {
        bool placed = false;
        while (!placed) {
            int x = rand() % BOARD_SIZE;
            int y = rand() % BOARD_SIZE;

            if (board[x][y] == EMPTY) {
                placed = true;
                board[x][y] = SHIP;
            }
        }
    }
}

void playerShoot(char board[][BOARD_SIZE]) {
    int x, y;
    cout << "Enter coordinates to shoot (x y): ";
    cin >> x >> y;

    if (board[x][y] == SHIP) {
        cout << "Hit!" << endl;
        board[x][y] = HIT;
    }
    else {
        cout << "Miss!" << endl;
        board[x][y] = MISS;
    }
}

void computerRandomShoot(char board[][BOARD_SIZE]) {
    srand(time(0));

    int x = rand() % BOARD_SIZE;
    int y = rand() % BOARD_SIZE;

    if (board[x][y] == SHIP) {
        cout << "Computer hit at coordinates (" << x << ", " << y << ")!" << endl;
        board[x][y] = HIT;
    }
    else {
        cout << "Computer missed at coordinates (" << x << ", " << y << ")!" << endl;
        board[x][y] = MISS;
    }
}

bool isGameOver(const char board[][BOARD_SIZE]) {
    for (int i = 0; i < BOARD_SIZE; ++i) {
        for (int j = 0; j < BOARD_SIZE; ++j) {
            if (board[i][j] == SHIP) {
                return false;
            }
        }
    }
    return true;
}

int main() {
    char playerBoard[BOARD_SIZE][BOARD_SIZE];
    char computerBoard[BOARD_SIZE][BOARD_SIZE];

    createBoard(playerBoard);
    createBoard(computerBoard);

    cout << "=== Welcome to Battleship! ===" << endl << endl;

    cout << "Player, place your ships." << endl;
    placeShipsManually(playerBoard);

    cout << "Computer is placing its ships." << endl;
    placeShipsRandomly(computerBoard);

    while (!isGameOver(playerBoard) && !isGameOver(computerBoard)) {
        cout << endl << "=== Player's turn ===" << endl;
        displayBoard(playerBoard);
        playerShoot(computerBoard);

        cout << endl << "=== Computer's turn ===" << endl;
        computerRandomShoot(playerBoard);
    }

    cout << endl << "=== Game Over ===" << endl;
    if (isGameOver(playerBoard)) {
        cout << "Computer wins!" << endl;
    }
    else {
        cout << "Player wins!" << endl;
    }

    return 0;
}
